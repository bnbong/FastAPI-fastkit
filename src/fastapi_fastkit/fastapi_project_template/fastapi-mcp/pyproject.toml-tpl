[project]
name = "<project_name>"
version = "0.1.0"
description = "<description>"
authors = [
    {name = "<author>", email = "<author_email>"},
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.8",
    "uvicorn[standard]>=0.34.0",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.7.1",
    "SQLAlchemy>=2.0.38",
    "python-dotenv>=1.0.1",
    "fastapi-mcp>=0.3.4",
    "bcrypt>=3.2.2",
    "passlib>=1.7.4",
    "python-jose>=3.3.0",
    "python-multipart>=0.0.17",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=4.0.0",
    "httpx>=0.28.1",
    "black>=25.1.0",
    "isort>=6.0.0",
    "mypy>=1.15.0",
    "PyYAML>=6.0.2",
]

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=4.0.0",
    "httpx>=0.28.1",
    "black>=25.1.0",
    "isort>=6.0.0",
    "mypy>=1.15.0",
    "PyYAML>=6.0.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.mypy_cache
  | \.pytest_cache
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=src --cov-report=term-missing"
