# --------------------------------------------------------------------------
# Item endpoint testcases
# --------------------------------------------------------------------------
import json
import os

import pytest
from fastapi.testclient import TestClient

from src.main import app

client = TestClient(app)
MOCK_FILE = os.path.join(os.path.dirname(__file__), "../src/mocks/mock_items.json")


@pytest.fixture(autouse=True)
def reset_mock_data():
    initial_data = [
        {"id": 1, "name": "Test Item 1", "price": 10.5, "category": "test"},
        {"id": 2, "name": "Test Item 2", "price": 20.0, "category": "test"},
    ]
    with open(MOCK_FILE, "w") as file:
        json.dump(initial_data, file)
    yield


def test_read_all_items():
    response = client.get("/items")
    assert response.status_code == 200
    assert len(response.json()) == 2


def test_read_item_success():
    response = client.get("/items/1")
    assert response.status_code == 200
    assert response.json()["name"] == "Test Item 1"


def test_read_item_not_found():
    response = client.get("/items/999")
    assert response.status_code == 404


def test_create_item():
    new_item = {"name": "New Item", "price": 30.0, "category": "new"}
    response = client.post("/items", json=new_item)
    assert response.status_code == 201
    assert response.json()["id"] == 3


def test_update_item():
    updated_data = {"name": "Updated Item", "price": 15.0, "category": "updated"}
    response = client.put("/items/1", json=updated_data)
    assert response.status_code == 200
    assert response.json()["name"] == "Updated Item"


def test_delete_item():
    response = client.delete("/items/1")
    assert response.status_code == 200
    response = client.get("/items/1")
    assert response.status_code == 404
