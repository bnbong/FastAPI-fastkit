# --------------------------------------------------------------------------
# The module defines User model's CRUD methods.
# --------------------------------------------------------------------------
import os

from typing import Type
from uuid import UUID

from ._base import load_json
from src.helper.exceptions import InternalException, ErrorCode
from src.schemas.user import UserSchema, UserCreate, UserUpdate
from src.helper.global_data import mock_user_data


def get_mock_user_data(id: UUID) -> dict:
    user_data = next((user for user in mock_user_data if user["id"] == str(id)), None)
    if user_data is None:
        raise InternalException(
            message="User not found.", error_code=ErrorCode.NOT_FOUND
        )
    return user_data


def create_mock_user(user: UserCreate) -> dict:
    new_user = user.model_dump()
    if any(u["email"] == new_user["email"] for u in mock_user_data):
        raise InternalException(
            error_code=ErrorCode.CONFLICT,
            message="This user is already exist.",
        )
    mock_user_data.append(new_user)
    return new_user


def update_mock_user(id: UUID, user: UserUpdate) -> dict:
    user_data = get_mock_user_data(id)
    update_data = user.model_dump(exclude_unset=True)
    user_data.update(update_data)
    return user_data


def delete_mock_user(id: UUID) -> None:
    user_data = get_mock_user_data(id)
    mock_user_data.remove(user_data)
